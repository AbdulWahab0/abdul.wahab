{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\nCopyright (c) Uber Technologies, Inc.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n*/\n\n\nimport * as React from 'react';\nimport { LocaleContext } from '../locale/index.js';\nimport { getOverrides } from '../helpers/overrides.js';\nimport { PanelContainer as StyledPanelContainer, Header as StyledHeader, Content as StyledContent, ToggleIcon as StyledToggleIcon, ToggleIconGroup as StyledToggleIconGroup, ContentAnimationContainer as StyledContentAnimationContainer } from './styled-components.js';\nimport { isFocusVisible, forkFocus, forkBlur } from '../utils/focusVisible.js';\n\nvar Panel = function Panel(_ref) {\n  var ariaControls = _ref['aria-controls'],\n      children = _ref.children,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$expanded = _ref.expanded,\n      expanded = _ref$expanded === void 0 ? false : _ref$expanded,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$onClick = _ref.onClick,\n      onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick,\n      _ref$onKeyDown = _ref.onKeyDown,\n      onKeyDown = _ref$onKeyDown === void 0 ? function () {} : _ref$onKeyDown,\n      _ref$overrides = _ref.overrides,\n      overrides = _ref$overrides === void 0 ? {} : _ref$overrides,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      _ref$renderPanelConte = _ref.renderPanelContent,\n      renderPanelContent = _ref$renderPanelConte === void 0 ? false : _ref$renderPanelConte,\n      _ref$renderAll = _ref.renderAll,\n      renderAll = _ref$renderAll === void 0 ? false : _ref$renderAll;\n\n  var _React$useState = React.useState({\n    expanded: expanded,\n    isFocusVisible: false,\n    elementHeight: 0,\n    animationInProgress: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      localState = _React$useState2[0],\n      setLocalState = _React$useState2[1];\n\n  var handleFocus = React.useCallback(function (event) {\n    if (isFocusVisible(event)) {\n      setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n        isFocusVisible: true\n      }));\n    }\n  }, [localState]);\n  var handleBlur = React.useCallback(function (event) {\n    if (localState.isFocusVisible) {\n      setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n        isFocusVisible: false\n      }));\n    }\n  }, [localState]);\n  var handleClick = React.useCallback(function (e) {\n    if (disabled) {\n      return;\n    }\n\n    typeof onChange === 'function' && onChange({\n      expanded: !expanded\n    });\n    typeof onClick === 'function' && onClick(e);\n  }, []);\n  var handleKeyDown = React.useCallback(function (e) {\n    if (disabled) {\n      return;\n    }\n\n    var ENTER = 13;\n    var SPACE = 32;\n\n    if (e.keyCode === ENTER || e.keyCode === SPACE) {\n      typeof onChange === 'function' && onChange({\n        expanded: !expanded\n      });\n\n      if (e.keyCode === SPACE) {\n        e.preventDefault(); // prevent jumping scroll when using Space\n      }\n    }\n\n    typeof onKeyDown === 'function' && onKeyDown(e);\n  }, []); // eslint-disable-next-line flowtype/no-weak-types\n\n  var _animateRef = React.useRef(null);\n\n  React.useEffect(function () {\n    if (_animateRef.current) {\n      var height = _animateRef.current.getBoundingClientRect().height; // After the first render, when everything is in the DOM, update the local\n      //state to indicate an animation is in progress.\n\n\n      if (expanded !== localState.expanded) {\n        setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n          expanded: expanded,\n          animationInProgress: true\n        }));\n      } else if (parseInt(localState.elementHeight) !== height) {\n        // After the second render (where child elements were added to the Content)\n        //the Content height now reflects the true height. This kicks off the actual\n        //animation.\n        setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n          elementHeight: height ? \"\".concat(height, \"px\") : 0\n        }));\n      }\n    }\n  }, [_animateRef.current, expanded, localState.elementHeight, localState.expanded, setLocalState]);\n  var contentHeight = React.useMemo(function () {\n    // When closing, the first render will re-query the content element for the new\n    //height and set the height of the animation container from auto to a px value.\n    if (!expanded && localState.expanded) {\n      var height = _animateRef.current.getBoundingClientRect().height;\n\n      setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n        elementHeight: height ? \"\".concat(height, \"px\") : 0\n      }));\n      return localState.elementHeight;\n    }\n\n    if (!localState.expanded) {\n      return 0;\n    } // When no longer animating, set the height to auto to accommodate dynamic nested components.\n\n\n    return localState.animationInProgress ? localState.elementHeight : 'auto';\n  }, [expanded, localState.expanded, localState.animationInProgress, localState.elementHeight]);\n  var sharedProps = {\n    $disabled: disabled,\n    $expanded: expanded,\n    $isFocusVisible: localState.isFocusVisible\n  };\n  var PanelContainerOverride = overrides.PanelContainer,\n      HeaderOverride = overrides.Header,\n      ContentOverride = overrides.Content,\n      ContentAnimationContainerOverride = overrides.ContentAnimationContainer,\n      ToggleIconOverride = overrides.ToggleIcon,\n      ToggleIconGroupOverride = overrides.ToggleIconGroup;\n\n  var _getOverrides = getOverrides(PanelContainerOverride, StyledPanelContainer),\n      _getOverrides2 = _slicedToArray(_getOverrides, 2),\n      PanelContainer = _getOverrides2[0],\n      panelContainerProps = _getOverrides2[1];\n\n  var _getOverrides3 = getOverrides(HeaderOverride, StyledHeader),\n      _getOverrides4 = _slicedToArray(_getOverrides3, 2),\n      Header = _getOverrides4[0],\n      headerProps = _getOverrides4[1];\n\n  var _getOverrides5 = getOverrides(ContentOverride, StyledContent),\n      _getOverrides6 = _slicedToArray(_getOverrides5, 2),\n      Content = _getOverrides6[0],\n      contentProps = _getOverrides6[1];\n\n  var _getOverrides7 = getOverrides(ContentAnimationContainerOverride, StyledContentAnimationContainer),\n      _getOverrides8 = _slicedToArray(_getOverrides7, 2),\n      ContentAnimationContainer = _getOverrides8[0],\n      contentAnimationProps = _getOverrides8[1];\n\n  var _getOverrides9 = getOverrides(ToggleIconGroupOverride, StyledToggleIconGroup),\n      _getOverrides10 = _slicedToArray(_getOverrides9, 2),\n      ToggleIconGroup = _getOverrides10[0],\n      toggleIconGroupProps = _getOverrides10[1];\n\n  var _getOverrides11 = getOverrides(ToggleIconOverride, StyledToggleIcon),\n      _getOverrides12 = _slicedToArray(_getOverrides11, 2),\n      ToggleIcon = _getOverrides12[0],\n      toggleIconProps = _getOverrides12[1];\n\n  return /*#__PURE__*/React.createElement(LocaleContext.Consumer, null, function (locale) {\n    return /*#__PURE__*/React.createElement(PanelContainer, _extends({}, sharedProps, panelContainerProps), /*#__PURE__*/React.createElement(Header, _extends({\n      tabIndex: 0,\n      role: \"button\",\n      \"aria-expanded\": expanded,\n      \"aria-disabled\": disabled || null\n    }, sharedProps, headerProps, ariaControls ? {\n      'aria-controls': ariaControls\n    } : {}, {\n      onClick: handleClick,\n      onKeyDown: handleKeyDown,\n      onFocus: forkFocus(headerProps, handleFocus),\n      onBlur: forkBlur(headerProps, handleBlur)\n    }), title, /*#__PURE__*/React.createElement(ToggleIcon, _extends({\n      viewBox: \"0 0 24 24\",\n      title: localState.expanded ? locale.accordion.collapse : locale.accordion.expand,\n      size: 16\n    }, toggleIconProps, sharedProps), /*#__PURE__*/React.createElement(ToggleIconGroup, _extends({}, sharedProps, toggleIconGroupProps), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M6 12C6 11.4477 6.44772 11 7 11H17C17.5523 11 18 11.4477 18 12C18 12.5523 17.5523 13 17 13H7C6.44772 13 6 12.5523 6 12Z\"\n    })), /*#__PURE__*/React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      d: \"M6 12C6 11.4477 6.44772 11 7 11H17C17.5523 11 18 11.4477 18 12C18 12.5523 17.5523 13 17 13H7C6.44772 13 6 12.5523 6 12Z\"\n    }))), /*#__PURE__*/React.createElement(ContentAnimationContainer, _extends({}, sharedProps, contentAnimationProps, {\n      $height: contentHeight,\n      onTransitionEnd: function onTransitionEnd() {\n        if (localState.animationInProgress) {\n          setLocalState(_objectSpread(_objectSpread({}, localState), {}, {\n            animationInProgress: false\n          }));\n        }\n      }\n    }), /*#__PURE__*/React.createElement(Content, _extends({\n      ref: _animateRef\n    }, sharedProps, contentProps, ariaControls ? {\n      id: ariaControls\n    } : {}), localState.expanded || renderAll || renderPanelContent || localState.animationInProgress ? children : null)));\n  });\n};\n\nexport default Panel;","map":null,"metadata":{},"sourceType":"module"}